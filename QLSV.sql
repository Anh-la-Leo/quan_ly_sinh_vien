create DATABASE Quan_Ly_Sinh_Vien
GO

use Quan_Ly_Sinh_Vien
GO

create table KHOA
(
     MA_KHOA varchar(10) primary key,
	 TEN_KHOA nvarchar(100),
	 NAM_THANH_LAP int,
)

create table KHOA_HOC
(
     MA_KHOA_HOC varchar(10) primary key,
	 NAM_BAT_DAU int,
	 NAM_KET_THUC int
)

create table CHUONG_TRINH_HOC
(
     MA_CT varchar(10) primary key,
	 TEN_CT nvarchar(100)
)

create table LOP
(
     MA_LOP varchar(10) primary key,
	 MA_KHOA varchar(10) not null,
	 MA_KHOA_HOC VARCHAR(10) NOT NULL,
	 MA_CT VARCHAR(10) NOT NULL,
	 STT INT

	 foreign key(MA_KHOA) REFERENCES KHOA(MA_KHOA),
	 FOREIGN KEY(MA_KHOA_HOC) REFERENCES KHOA_HOC(MA_KHOA_HOC),
	 FOREIGN KEY(MA_CT) REFERENCES CHUONG_TRINH_HOC(MA_CT)
)
GO

CREATE TABLE SINH_VIEN
(
     MASV VARCHAR(10) PRIMARY KEY,
	 HO_TEN NVARCHAR(100),
	 NAM_SINH INT,
	 DAN_TOC NVARCHAR(100),
	 MA_LOP VARCHAR(10) NOT NULL

	 FOREIGN KEY(MA_LOP) REFERENCES LOP(MA_LOP)
)
GO

CREATE TABLE MON_HOC
(
     MAMH VARCHAR(10) PRIMARY KEY,
	 MA_KHOA VARCHAR(10) NOT NULL,
	 TENMH NVARCHAR(100)

	 FOREIGN KEY(MA_KHOA) REFERENCES KHOA(MA_KHOA)
)
GO

CREATE TABLE KET_QUA
(
     MASV VARCHAR(10) NOT NULL,
	 MAMH VARCHAR(10) NOT NULL,
	 LAN_THI INT NOT NULL,
	 DIEM_THI FLOAT 

	 PRIMARY KEY(MASV, MAMH, LAN_THI),

     FOREIGN KEY(MASV) REFERENCES SINH_VIEN(MASV),
	 FOREIGN KEY(MAMH) REFERENCES MON_HOC(MAMH)
)
GO

CREATE TABLE GIANG_KHOA
(
    MA_CT VARCHAR(10) NOT NULL,
	MA_KHOA VARCHAR(10) NOT NULL,
	MAMH VARCHAR(10) NOT NULL,
	NAM_HOC INT NOT NULL,
	HOC_KY INT,
	STLT INT, --số tiết lý thuyết
	STTH INT, --số tiết thực hành
	SO_TIN_CHI INT 

	PRIMARY KEY(MA_CT, MA_KHOA, MAMH, NAM_HOC),

	FOREIGN KEY(MA_CT) REFERENCES CHUONG_TRINH_HOC(MA_CT),
	FOREIGN KEY(MA_KHOA) REFERENCES KHOA(MA_KHOA),
	FOREIGN KEY(MAMH) REFERENCES MON_HOC(MAMH)
)
GO

-- 1: Truy vấn danh sách sinh viên khoa "CNTT" từ năm 2002-2006
Select SINH_VIEN.* from SINH_VIEN 
LEFT JOIN LOP ON SINH_VIEN.MA_LOP = LOP.MA_LOP
LEFT JOIN KHOA_HOC ON LOP.MA_KHOA_HOC = KHOA_HOC.MA_KHOA_HOC
LEFT JOIN KHOA ON LOP.MA_KHOA = KHOA.MA_KHOA
WHERE KHOA.MA_KHOA = 'CNTT'
AND KHOA_HOC.NAM_BAT_DAU = 2002
AND KHOA_HOC.NAM_KET_THUC = 2006
-- 2: (MSSV, HỌ TÊN, NĂM SINH) CỦA CÁC SINH VIÊN HỌC SỚM HƠN TUỔI QUY ĐỊNH (THEO TUỔI QUY ĐỊNH SINH VIÊN ĐỦ 18 TUỔI MỚI BẮT ĐẦU KHÓA HỌC)
SELECT SINH_VIEN.MASV, SINH_VIEN.HO_TEN, SINH_VIEN.NAM_SINH from SINH_VIEN
LEFT JOIN LOP ON SINH_VIEN.MA_LOP = LOP.MA_LOP
LEFT JOIN KHOA_HOC ON LOP.MA_KHOA_HOC = KHOA_HOC.MA_KHOA_HOC
WHERE KHOA_HOC.NAM_BAT_DAU - SINH_VIEN.NAM_SINH <18
-- 3: Truy vấn danh sách sinh viên khoa Công nghệ thông tin khóa 2002-2006 chưa học môn cấu trúc dữ liệu 1
SELECT DISTINCT SINH_VIEN.* from SINH_VIEN
LEFT JOIN LOP ON SINH_VIEN.MA_LOP = LOP.MA_LOP
LEFT JOIN KHOA ON LOP.MA_KHOA = KHOA.MA_KHOA
LEFT JOIN KHOA_HOC ON LOP.MA_KHOA_HOC = KHOA_HOC.MA_KHOA_HOC
LEFT JOIN MON_HOC ON MON_HOC.MA_KHOA = KHOA.MA_KHOA
WHERE KHOA.MA_KHOA = 'CNTT'
AND KHOA_HOC.NAM_BAT_DAU = 2002
AND KHOA_HOC.NAM_KET_THUC = 2006
AND MON_HOC.TENMH NOT LIKE N'CẤU TRÚC DỮ LIỆU 1'
-- 4: Truy vấn danh sách sinh vien không thi qua môn Cấu trúc dữ liệu 1 ( điểm thi <5 ) nhưng chưa thi lại
SELECT SINH_VIEN. * FROM SINH_VIEN
LEFT JOIN KET_QUA ON SINH_VIEN.MASV = KET_QUA.MASV
LEFT JOIN MON_HOC ON KET_QUA.MAMH = MON_HOC.MAMH
WHERE MON_HOC.TENMH LIKE N'CẤU TRÚC DỮ LIỆU 1'
and KET_QUA.LAN_THI = 1
AND KET_QUA.DIEM_THI < 5
AND SINH_VIEN.MASV NOT IN 
(
SELECT SINH_VIEN.MASV FROM SINH_VIEN
LEFT JOIN KET_QUA ON SINH_VIEN.MASV = KET_QUA.MASV
LEFT JOIN MON_HOC ON MON_HOC.MAMH = MON_HOC.MAMH
WHERE MON_HOC.TENMH LIKE N'CẤU TRÚC DỮ LIỆU 1'
and KET_QUA.LAN_THI > 1
)
-- 5: Với mỗi lớp thuộc khoa cntt , cho biết mã lớp, mã khóa học,  tên chương trình và số sinh viên thuộc lớp đó 
SELECT LOP.MA_LOP, LOP.MA_KHOA_HOC, CHUONG_TRINH_HOC.TEN_CT, COUNT(SINH_VIEN.MASV) AS [SỐ SINH VIÊN] FROM LOP
LEFT JOIN CHUONG_TRINH_HOC ON LOP.MA_CT = CHUONG_TRINH_HOC.MA_CT
LEFT JOIN SINH_VIEN ON SINH_VIEN.MA_LOP = LOP.MA_LOP
LEFT JOIN KHOA ON KHOA.MA_KHOA = LOP.MA_KHOA
WHERE KHOA.MA_KHOA = 'CNTT'
GROUP BY LOP.MA_LOP,LOP.MA_KHOA_HOC,CHUONG_TRINH_HOC.TEN_CT
-- 6: Với 1 Mã sinh viên và một mã khoa, kiểm tra xem sinh viên đó có thuộc khoa này hay không( trả về kết quả true hoặc false)
CREATE FUNCTION KF_CHECK_SV_IN_KHOA
(
    @masv varchar(10),
	@makhoa varchar(10)
)
returns varchar(5)
as
begin
declare @ketqua varchar(5)
set @ketqua = 'FALSE'
IF (EXISTS (SELECT * FROM SINH_VIEN
            LEFT JOIN LOP ON LOP.MA_LOP = SINH_VIEN.MA_LOP
			LEFT JOIN KHOA ON LOP.MA_KHOA = KHOA.MA_KHOA
			WHERE SINH_VIEN.MASV = @masv
			and KHOA.MA_KHOA = @makhoa
			)
	)
	set @ketqua = 'TRUE'
else 
    set @ketqua = 'FALSE'
return @ketqua
end
select dbo.KF_CHECK_SV_IN_KHOA('0212003','CNTT')
select dbo.KF_CHECK_SV_IN_KHOA('0212002','VL')
select dbo.KF_CHECK_SV_IN_KHOA('0212003','CNTT')
-- 7 cập nhật năm sinh sinh viên 
UPDATE SINH_VIEN SET NAM_SINH = '1983' WHERE MASV = 0311002
